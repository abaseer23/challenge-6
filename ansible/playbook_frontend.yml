- name: Configure frontend (Amazon Linux 2)
  hosts: frontend
  become: true
  vars:
    nginx_backend_ip: "54.162.98.239"  # Define your backend IP here

  tasks:
    # Install required packages for Python build
    - name: Install required packages for Python build
      yum:
        name:
          - gcc
          - openssl-devel
          - bzip2-devel
          - libffi-devel
          - wget
          - make
          - zlib-devel
          - tar
        state: present

    - name: Download Python 3.12.3 source
      get_url:
        url: https://www.python.org/ftp/python/3.12.3/Python-3.12.3.tgz
        dest: /usr/src/Python-3.12.3.tgz

    - name: Extract Python 3.12.3 source
      unarchive:
        src: /usr/src/Python-3.12.3.tgz
        dest: /usr/src/
        remote_src: yes

    - name: Compile and install Python 3.12.3
      command: >
        ./configure --enable-optimizations && make -j "$(nproc)" && make altinstall
      args:
        chdir: /usr/src/Python-3.12.3
      creates: /usr/local/bin/python3.12

    - name: Set Python 3.12 as default python3
      alternatives:
        name: python3
        path: /usr/local/bin/python3.12
        priority: 1

    # System and network configuration
    - name: Disable SELinux
      command: echo "SELinux not applicable on Amazon Linux"
      changed_when: false
      ignore_errors: true

    - name: Disable firewalld
      yum:
        name: firewalld
        state: absent

    - name: Enable nginx1 from Amazon Linux Extras
      command: amazon-linux-extras enable nginx1
      register: result
      changed_when: "'nginx1' in result.stdout"

    - name: Install Nginx
      yum:
        name: nginx
        state: present

    - name: Configure Nginx as reverse proxy
      copy:
        dest: /etc/nginx/nginx.conf
        content: |
          user nginx;
          worker_processes auto;
          pid /var/run/nginx.pid;

          events {
            worker_connections 1024;
          }

          http {
            include       /etc/nginx/mime.types;
            default_type  application/octet-stream;
            access_log    /var/log/nginx/access.log;
            error_log     /var/log/nginx/error.log;

            sendfile        on;
            tcp_nopush      on;
            tcp_nodelay     on;
            keepalive_timeout 65;
            types_hash_max_size 2048;

            include /etc/nginx/conf.d/*.conf;

            # Reverse proxy settings for backend
            server {
                listen 80;
                server_name c8.local;

                location / {
                    proxy_pass http://{{ nginx_backend_ip }}:19999;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }
            }
          }

    - name: Ensure Nginx is running
      service:
        name: nginx
        state: started
        enabled: yes
